table 'Child Location Record'
	lineageTag: e081ea24-ed7a-472d-a129-6b4ac6d0fee2

	measure 'Days of Care' =
			
			VAR CurrentDate = TODAY()
			VAR StartDate = [Selected Timeframe Start]  // This is a measure calculating the start of the desired timeframe.
			VAR EndDate = [Selected Timeframe End]  // This is a measure calculating the end of the desired timeframe.
			VAR Result =
			    CALCULATE(
			        DISTINCTCOUNT(ChildLocationExpanded[Date]),
			        'ChildLocationExpanded'[ChildcarePlan] <> "WithParent",
			        'ChildLocationExpanded'[Date] >= StartDate,
			        'ChildLocationExpanded'[Date] <= MIN(EndDate, CurrentDate)  // Ensure calculation up to the current date or the end date, whichever is earlier.
			    )
			RETURN
			    IF(
			        CurrentDate < StartDate,  // If today is before the start date, show BLANK.
			        BLANK(),
			        IF(
			            Result = 0,
			            0,  // Return 0 if no data is found within the range up to the current date.
			            Result  // Otherwise, return the actual count.
			        )
			    )
		formatString: 0
		lineageTag: d94de293-34d2-47e4-b358-5b2cb522aa37

	measure 'Nights of Care' = ```
			
			VAR CurrentDate = TODAY()
			VAR StartDate = [Selected Timeframe Start]  // This is a measure calculating the start of the desired timeframe.
			VAR EndDate = [Selected Timeframe End]  // This is a measure calculating the end of the desired timeframe.
			VAR Result =
			    CALCULATE(
			        DISTINCTCOUNT(ChildLocationExpanded[Date]),
			        'ChildLocationExpanded'[ChildcarePlan] <> "WithParent",
			        'ChildLocationExpanded'[OvernightStay] = TRUE(),  // Only consider records where OvernightStay is TRUE.
			        'ChildLocationExpanded'[Date] >= StartDate,
			        'ChildLocationExpanded'[Date] <= MIN(EndDate, CurrentDate)  // Ensure calculation up to the current date or the end date, whichever is earlier.
			    )
			RETURN
			    IF(
			        CurrentDate < StartDate,  // If today is before the start date, show BLANK.
			        BLANK(),
			        IF(
			            Result = 0,
			            0,  // Return 0 if no data is found within the range up to the current date.
			            Result  // Otherwise, return the actual count.
			        )
			    )
			
			```
		formatString: 0
		lineageTag: b6cdfb32-4569-451f-9f1d-6abce525a979

	column OrganizationId
		dataType: string
		lineageTag: ed344387-0276-4f5f-b68e-3018fee85930
		summarizeBy: none
		sourceColumn: OrganizationId

		annotation SummarizationSetBy = Automatic

	column LocationId
		dataType: string
		lineageTag: 5f75cc31-c749-4b78-9d4e-01a227f7f20e
		summarizeBy: none
		sourceColumn: LocationId

		annotation SummarizationSetBy = Automatic

	column 'RLS Key'
		dataType: string
		lineageTag: ffe7f29a-098e-4043-9559-7bd897dba745
		summarizeBy: none
		sourceColumn: RLS Key

		annotation SummarizationSetBy = Automatic

	column ArrangementId
		dataType: string
		lineageTag: 855407f0-6592-4e2f-89d4-34b2d51feb88
		summarizeBy: none
		sourceColumn: ArrangementId

		annotation SummarizationSetBy = Automatic

	column ChildPersonId
		dataType: string
		lineageTag: c6001df0-0bc3-4066-be07-0a8f6e2c4a78
		summarizeBy: none
		sourceColumn: ChildPersonId

		annotation SummarizationSetBy = Automatic

	column FamilyId
		dataType: string
		lineageTag: ad1b2a17-0708-4459-9506-9906fc5fc576
		summarizeBy: none
		sourceColumn: FamilyId

		annotation SummarizationSetBy = Automatic

	column Started
		dataType: dateTime
		formatString: General Date
		lineageTag: f2cfaaf8-0aab-45ac-8aa3-7fa0f7d7950f
		summarizeBy: none
		sourceColumn: Started

		variation Variation
			isDefault
			relationship: f685517c-f74f-4d78-9f60-c1f6900aa13d
			defaultHierarchy: LocalDateTable_a0954dd8-550f-49c8-ab64-48f992fb833c.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

	column ChildcarePlan
		dataType: string
		lineageTag: 98d4a9e7-c294-408e-ae27-69136a2c1c92
		summarizeBy: none
		sourceColumn: ChildcarePlan

		annotation SummarizationSetBy = Automatic

	column Ended
		dataType: dateTime
		formatString: General Date
		lineageTag: 0dce2a65-2417-4291-8f92-2400d4246c3b
		summarizeBy: none
		sourceColumn: Ended

		variation Variation
			isDefault
			relationship: bc9a84b4-f487-4bd3-91bd-993033d9d92b
			defaultHierarchy: LocalDateTable_5ca69e7d-8556-4358-897f-394e94ef347b.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

	column Duration
		dataType: double
		lineageTag: 903fc9bc-1ec3-4840-afdb-7ee37c2d6df8
		summarizeBy: sum
		sourceColumn: Duration

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column Index
		dataType: int64
		formatString: 0
		lineageTag: 5471234c-293b-4d0d-93e5-0f52380995e3
		summarizeBy: sum
		sourceColumn: Index

		annotation SummarizationSetBy = Automatic

	column 'Childcare Family Name'
		dataType: string
		lineageTag: 54a61d5d-5d7c-4a7a-835a-86cb905a6306
		summarizeBy: none
		sourceColumn: Childcare Family Name

		annotation SummarizationSetBy = Automatic

	column 'Index PK'
		dataType: string
		lineageTag: 5c1dff47-d76c-4540-b49c-212ef6a2fbe0
		summarizeBy: none
		sourceColumn: Index PK

		annotation SummarizationSetBy = Automatic

	partition 'Child Location Record' = m
		mode: import
		queryGroup: 'Model Queries'
		source = ```
				let 
				    Source = #"OData Live",
				    SourceTable = Source{[Name="ChildLocationRecords", Signature="table"]}[Data],
				
				    ChildLocationRecord = 
				
				    Table.SelectColumns(
				        Table.AddColumn(
				            Table.AddIndexColumn(
				                Table.RenameColumns(
				                    Table.TransformColumns(
				                        SourceTable,
				                        {{"StartedAtUtc", DateTimeZone.ToLocal, type datetimezone}, {"EndedAtUtc", DateTimeZone.ToLocal, type datetimezone}}
				                    ),
				                    {{"StartedAtUtc", "Started"}, {"EndedAtUtc", "Ended"}}
				                ),
				                "Index", 1, 1, Int64.Type
				            ),
				            "RLS Key", each Text.Combine({[OrganizationId], [LocationId]}, "-")
				        ),
				        {"OrganizationId", "LocationId", "RLS Key", "ArrangementId", "ChildPersonId", "FamilyId", "ChildcarePlan", "Started", "Ended", "Duration", "Index"}
				    ),
				
				
				    // Adding the Family Name:
				    Family = Table.SelectColumns(Source{[Name="Family",Signature="table"]}[Data], {"Id", "Name"}),
				
				    // Combined Tables: 
				    Combined = Table.RenameColumns(Table.SelectColumns(Table.Join(
				        ChildLocationRecord,
				        "FamilyId",
				        Family,
				        "Id",
				        JoinKind.LeftOuter
				    ),{"OrganizationId", "LocationId", "RLS Key", "ArrangementId", "ChildPersonId", "FamilyId", "Started", "ChildcarePlan", "Ended", "Duration", "Index", "Name"}), 
				    {{"Name", "Childcare Family Name"}}),
				
				    // Temporary FIX: 
				    CLRFinal = Table.AddColumn(
				        Combined,
				        "Index PK", each Text.Combine({[RLS Key], Text.From([Index]), [ChildPersonId]}, "-")
				    ),
				    #"Filtered Rows" = Table.SelectRows(CLRFinal, each true),
				    #"Removed Duplicates" = Table.Distinct(#"Filtered Rows", {"Index PK"})
				in
				    #"Removed Duplicates"
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

